ggsave(file.path(output_path, "DD_SS_100slices_no_errorbars_all.png"),
plot = plot_no_error_dd_ss, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_SS_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_dd_ss, width = 8, height = 5)
ggsave(file.path(output_path, "DD_SS_100slices_with_sem_all.png"),
plot = plot_with_sem_dd_ss, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_SS_100slices_with_sem_all.pdf"),
plot = plot_with_sem_dd_ss, width = 8, height = 5)
# Filter for DD and DS treatments and first 100 slices
data_dd_ds <- data_long %>%
filter(Treatment %in% c("DD", "DS"), slice <= 100)
# Compute mean and SEM per slice per treatment
summary_dd_ds <- data_dd_ds %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_dd_ds <- ggplot(summary_dd_ds, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs DS (No Error Bars)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_dd_ds <- ggplot(summary_dd_ds, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs DS (With SEM)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "DD_DS_100slices_no_errorbars_all.png"),
plot = plot_no_error_dd_ds, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_DS_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_dd_ds, width = 8, height = 5)
ggsave(file.path(output_path, "DD_DS_100slices_with_sem_all.png"),
plot = plot_with_sem_dd_ds, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_DS_100slices_with_sem_all.pdf"),
plot = plot_with_sem_dd_ds, width = 8, height = 5)
# Filter for SS and SD treatments and first 100 slices
data_ss_sd <- data_long %>%
filter(Treatment %in% c("SS", "SD"), slice <= 100)
# Compute mean and SEM per slice per treatment
summary_ss_sd <- data_ss_sd %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_ss_sd <- ggplot(summary_ss_sd, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
theme_minimal() +
labs(title = "Skeletal Thickness: SS vs SD (No Error Bars)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_ss_sd <- ggplot(summary_ss_sd, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness: SS vs SD (With SEM)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "SS_SD_100slices_no_errorbars_all.png"),
plot = plot_no_error_ss_sd, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "SS_SD_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_ss_sd, width = 8, height = 5)
ggsave(file.path(output_path, "SS_SD_100slices_with_sem_all.png"),
plot = plot_with_sem_ss_sd, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "SS_SD_100slices_with_sem_all.pdf"),
plot = plot_with_sem_ss_sd, width = 8, height = 5)
View(df)
View(plot_no_error)
View(plot_no_error_100)
View(plot_with_sem_ss_sd)
View(summary_100)
View(data_100)
# Read the CSV file
df <- read.csv("/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/microCT/Skeletal thickness 3Dum_compare 2024vs2025.csv")
View(df)
# Reshape and process
data_long <- df %>%
pivot_longer(-slice, names_to = "Sample", values_to = "Thickness") %>%
mutate(
Treatment = sapply(strsplit(Sample, "_"), function(x) x[2])
)
View(data_long)
View(data_long)
# Reshape and process
data_long <- df %>%
pivot_longer(-slice, names_to = "Sample", values_to = "Thickness") %>%
mutate(
Treatment = sapply(strsplit(Sample, "_"), function(x) x[2])
)
# Compute mean and SEM per slice per treatment
summary_df <- data_long %>%
group_by(slice, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
View(summary_df)
View(summary_df)
# Plot WITHOUT error bars
plot_no_error <- ggplot(summary_df, aes(x = slice, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.6) +
theme_minimal() +
labs(title = "Skeletal Thickness by Slice and Treatment (No Error Bars)",
x = "Slice",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set2") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
View(plot_no_error)
# Plot WITH SEM error bars
plot_with_sem <- ggplot(summary_df, aes(x = slice, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.6) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 0.5, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness by Slice and Treatment (With SEM)",
x = "Slice",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set2") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output directory
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plot WITHOUT error bars
ggsave(filename = file.path(output_path, "skeletal_thickness_no_errorbars_all.png"),
plot = plot_no_error, width = 8, height = 5, dpi = 300)
ggsave(filename = file.path(output_path, "skeletal_thickness_no_errorbars_all.pdf"),
plot = plot_no_error, width = 8, height = 5)
# Save plot WITH SEM error bars
ggsave(filename = file.path(output_path, "skeletal_thickness_with_sem_all.png"),
plot = plot_with_sem, width = 8, height = 5, dpi = 300)
ggsave(filename = file.path(output_path, "skeletal_thickness_with_sem.pdf_all"),
plot = plot_with_sem, width = 8, height = 5)
# Reshape and process
data_long <- df %>%
pivot_longer(-slice, names_to = "Sample", values_to = "Thickness") %>%
mutate(
Treatment = sapply(strsplit(Sample, "_"), function(x) x[2]),
um = slice * 15  # Convert slice to microns
)
# Filter for first 100 slices only
data_100 <- data_long %>% filter(slice <= 100)
# Compute mean and SEM per slice per treatment
summary_100 <- data_100 %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_100 <- ggplot(summary_100, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.6) +
theme_minimal() +
labs(title = "Skeletal Thickness (First 100 Slices)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set2") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_100 <- ggplot(summary_100, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.6) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness with SEM (First 100 Slices)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set2") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "skeletal_thickness_100slices_no_errorbars_all.png"),
plot = plot_no_error_100, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "skeletal_thickness_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_100, width = 8, height = 5)
ggsave(file.path(output_path, "skeletal_thickness_100slices_with_sem_all.png"),
plot = plot_with_sem_100, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "skeletal_thickness_100slices_with_sem_all.pdf"),
plot = plot_with_sem_100, width = 8, height = 5)
# Filter for DD and SS treatments and first 100 slices
data_dd_ss <- data_long %>%
filter(Treatment %in% c("DD", "SS"), slice <= 100)
# Compute mean and SEM per slice per treatment
summary_dd_ss <- data_dd_ss %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_dd_ss <- ggplot(summary_dd_ss, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs SS (No Error Bars)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_dd_ss <- ggplot(summary_dd_ss, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs SS (With SEM)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "DD_SS_100slices_no_errorbars_all.png"),
plot = plot_no_error_dd_ss, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_SS_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_dd_ss, width = 8, height = 5)
ggsave(file.path(output_path, "DD_SS_100slices_with_sem_all.png"),
plot = plot_with_sem_dd_ss, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_SS_100slices_with_sem_all.pdf"),
plot = plot_with_sem_dd_ss, width = 8, height = 5)
# Filter for DD and DS treatments and first 100 slices
data_dd_ds <- data_long %>%
filter(Treatment %in% c("DD", "DS"), slice <= 100)
# Compute mean and SEM per slice per treatment
summary_dd_ds <- data_dd_ds %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_dd_ds <- ggplot(summary_dd_ds, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs DS (No Error Bars)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_dd_ds <- ggplot(summary_dd_ds, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs DS (With SEM)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "DD_DS_100slices_no_errorbars_all.png"),
plot = plot_no_error_dd_ds, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_DS_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_dd_ds, width = 8, height = 5)
ggsave(file.path(output_path, "DD_DS_100slices_with_sem_all.png"),
plot = plot_with_sem_dd_ds, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_DS_100slices_with_sem_all.pdf"),
plot = plot_with_sem_dd_ds, width = 8, height = 5)
# Filter for SS and SD treatments and first 100 slices
data_ss_sd <- data_long %>%
filter(Treatment %in% c("SS", "SD"), slice <= 100)
# Compute mean and SEM per slice per treatment
summary_ss_sd <- data_ss_sd %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_ss_sd <- ggplot(summary_ss_sd, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
theme_minimal() +
labs(title = "Skeletal Thickness: SS vs SD (No Error Bars)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_ss_sd <- ggplot(summary_ss_sd, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness: SS vs SD (With SEM)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "SS_SD_100slices_no_errorbars_all.png"),
plot = plot_no_error_ss_sd, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "SS_SD_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_ss_sd, width = 8, height = 5)
ggsave(file.path(output_path, "SS_SD_100slices_with_sem_all.png"),
plot = plot_with_sem_ss_sd, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "SS_SD_100slices_with_sem_all.pdf"),
plot = plot_with_sem_ss_sd, width = 8, height = 5)
# Filter for DD and SS treatments and first 100 slices
data_dd_ss <- data_long %>%
filter(Treatment %in% c("DD", "SS", "DD.1", "SS.1"), slice <= 100)
# Compute mean and SEM per slice per treatment
summary_dd_ss <- data_dd_ss %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_dd_ss <- ggplot(summary_dd_ss, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs SS (No Error Bars)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_dd_ss <- ggplot(summary_dd_ss, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs SS (With SEM)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "DD_SS_100slices_no_errorbars_all.png"),
plot = plot_no_error_dd_ss, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_SS_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_dd_ss, width = 8, height = 5)
ggsave(file.path(output_path, "DD_SS_100slices_with_sem_all.png"),
plot = plot_with_sem_dd_ss, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_SS_100slices_with_sem_all.pdf"),
plot = plot_with_sem_dd_ss, width = 8, height = 5)
# Filter for DD and DS treatments and first 100 slices
data_dd_ds <- data_long %>%
filter(Treatment %in% c("DD", "DS", "DD.1", "DS.1"), slice <= 100)
# Compute mean and SEM per slice per treatment
summary_dd_ds <- data_dd_ds %>%
group_by(slice, um, Treatment) %>%
summarise(
Mean_Thickness = mean(Thickness, na.rm = TRUE),
SD = sd(Thickness, na.rm = TRUE),
n = n(),
SEM = SD / sqrt(n),
.groups = "drop"
)
# Plot WITHOUT error bars
plot_no_error_dd_ds <- ggplot(summary_dd_ds, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs DS (No Error Bars)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Plot WITH SEM error bars
plot_with_sem_dd_ds <- ggplot(summary_dd_ds, aes(x = um, y = Mean_Thickness, color = Treatment)) +
geom_point(alpha = 0.7) +
geom_errorbar(aes(ymin = Mean_Thickness - SEM, ymax = Mean_Thickness + SEM),
width = 10, alpha = 0.5) +
theme_minimal() +
labs(title = "Skeletal Thickness: DD vs DS (With SEM)",
x = "Depth (µm)",
y = "Skeletal Thickness ( µm)") +
scale_color_brewer(palette = "Set1") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 9))
# Define output path
output_path <- "/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plots
ggsave(file.path(output_path, "DD_DS_100slices_no_errorbars_all.png"),
plot = plot_no_error_dd_ds, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_DS_100slices_no_errorbars_all.pdf"),
plot = plot_no_error_dd_ds, width = 8, height = 5)
ggsave(file.path(output_path, "DD_DS_100slices_with_sem_all.png"),
plot = plot_with_sem_dd_ds, width = 8, height = 5, dpi = 300)
ggsave(file.path(output_path, "DD_DS_100slices_with_sem_all.pdf"),
plot = plot_with_sem_dd_ds, width = 8, height = 5)
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Read the CSV
data <- read.csv("/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/microCT/Meam_thickness_2025.csv")
names(data) <- trimws(names(data))  # Clean column names
# Clean column names (remove trailing spaces)
names(data) <- trimws(names(data))
# Extract treatment from the 'sample' column
data$treatment <- sub(".*_", "", data$sample)
# Read the CSV
data <- read.csv("/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/microCT/Porosity_bonej_2025.csv")
names(data) <- trimws(names(data))  # Clean column names
# Clean column names (remove trailing spaces)
names(data) <- trimws(names(data))
# Extract treatment from the 'sample' column
data$treatment <- sub(".*_", "", data$sample)
# Calculate mean and SEM for each treatment
summary_data <- data %>%
group_by(treatment) %>%
summarise(
mean_porosity = mean(porosity, na.rm = TRUE),
sem_porosity = sd(porosity, na.rm = TRUE) / sqrt(n())
)
# Read the CSV
data <- read.csv("/Users/talimass/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/microCT/Porosity_bonej_2025.csv")
names(data) <- trimws(names(data))  # Clean column names
# Clean column names (remove trailing spaces)
names(data) <- trimws(names(data))
# Extract treatment from the 'sample' column
data$treatment <- sub(".*_", "", data$sample)
# Calculate mean and SEM for each treatment
summary_data <- data %>%
group_by(treatment) %>%
summarise(
mean_porosity = mean(porosity, na.rm = TRUE),
sem_porosity = sd(porosity, na.rm = TRUE) / sqrt(n())
)
# Plot
porosity_plot <- ggplot(summary_data, aes(x = treatment, y = mean_porosity)) +
geom_bar(stat = "identity", fill = "skyblue", width = 0.6) +
geom_errorbar(aes(ymin = mean_porosity - sem_porosity, ymax = mean_porosity + sem_porosity),
width = 0.2) +
labs(title = "Average Porosity by Treatment_2025",
x = "Treatment",
y = "Porosity (mean ± SEM)") +
theme_minimal()
# Define output path
output_path <- "~/Documents/Documents - MacBook Pro/GitHub/Cayman-translocation/Ranalysis/output"
# Save plot
ggsave(filename = file.path(output_path, "Average_Porosity_by_Treatment_2025.png"),
porosity_plot, width = 8, height = 6)
ggsave(filename = file.path(output_path, "Average_Porosity_by_Treatment_2025.pdf"),
porosity_plot, width = 8, height = 6)
# Run ANOVA
anova_result <- aov(porosity ~ treatment, data = data)
# Define path to save the ANOVA results
anova_output_path <- file.path(output_path, "anova_results.txt")
# Save ANOVA summary to text file
capture.output(summary(anova_result), file = anova_output_path)
